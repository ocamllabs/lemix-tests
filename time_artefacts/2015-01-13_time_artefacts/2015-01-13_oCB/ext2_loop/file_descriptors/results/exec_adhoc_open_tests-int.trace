# processing file 'adhoc_open_tests-int.trace' ...
        @type trace
        # Tests for open and close

        ##############################################
        # basic cases that should work
        ##############################################

        # create a file with some content
     9: open "f1.txt" [O_CREAT;O_WRONLY] 0o644
        Tau
        RV_num(3)
    10: write (FD 3) "0123456789" 10
        Tau
        RV_num(10)
    11: close (FD 3)
        Tau
        RV_none

        # read that file again
    14: open "f1.txt" [O_RDONLY]
        Tau
        RV_num(3)
    15: read (FD 3) 100
        Tau
        RV_bytes("0123456789")
    16: close (FD 3)
        Tau
        RV_none

        # read-write
    19: open "f1.txt" [O_RDWR]
        Tau
        RV_num(3)
    20: write (FD 3) "ABCDE" 5
        Tau
        RV_num(5)
    21: lseek (FD 3) 0 SEEK_SET
        Tau
        RV_num(0)
    22: read (FD 3) 100
        Tau
        RV_bytes("ABCDE56789")
    23: close (FD 3)
        Tau
        RV_none

        # write only on existing file
    26: open "f1.txt" [O_WRONLY]
        Tau
        RV_num(3)
    27: write (FD 3) "012" 3
        Tau
        RV_num(3)
    28: close (FD 3)
        Tau
        RV_none

        # read that file again
    31: open "f1.txt" [O_RDWR]
        Tau
        RV_num(3)
    32: read (FD 3) 100
        Tau
        RV_bytes("012DE56789")
    33: close (FD 3)
        Tau
        RV_none

        # open for execute 
    36: open "f1.txt" [O_RDONLY]
        Tau
        RV_num(3)
    37: read (FD 3) 100
        Tau
        RV_bytes("012DE56789")
    38: close (FD 3)
        Tau
        RV_none


    41: mkdir "d1" 0o755
        Tau
        RV_none

        # open directory for searching
    44: open "d1" [O_RDONLY]
        Tau
        RV_num(3)
    45: read (FD 3) 100
        Tau
        EISDIR
    46: close (FD 3)
        Tau
        RV_none


        ##############################################
        # opening problems with 
        # non-existing files and dirs
        ##############################################

    54: open "non-such-file.txt" [O_RDONLY]
        Tau
        ENOENT
    55: read (FD 3) 100
        Tau
        EBADF
    56: close (FD 3)
        Tau
        EBADF

    58: open "/no_such_dir/non-such-file.txt" [O_RDONLY]
        Tau
        ENOENT
    59: read (FD 3) 100
        Tau
        EBADF
    60: close (FD 3)
        Tau
        EBADF

    62: open "non-such-dir/" [O_RDONLY]
        Tau
        ENOENT
    63: read (FD 3) 100
        Tau
        EBADF
    64: close (FD 3)
        Tau
        EBADF

    66: open "/no_such_dir/non-such-dir2/" [O_RDONLY]
        Tau
        ENOENT
    67: read (FD 3) 100
        Tau
        EBADF
    68: close (FD 3)
        Tau
        EBADF

        # opening an existing file with a slash at the end
    71: open "f1.txt/" [O_RDONLY]
        Tau
        ENOTDIR
    72: read (FD 3) 100
        Tau
        EBADF
    73: close (FD 3)
        Tau
        EBADF


        ##############################################
        # O_CREAT
        ##############################################

        # create without write flag is fine. It create
        # a file (if it does not exist before), but
        # we can only read from it
    83: open "f1.txt" [O_RDONLY;O_CREAT] 0o644
        Tau
        RV_num(3)
    84: write (FD 3) "ABCDE" 5
        Tau
        EBADF
    85: read (FD 3) 100
        Tau
        RV_bytes("012DE56789")
    86: close (FD 3)
        Tau
        RV_none

    88: open "f2.txt" [O_RDONLY;O_CREAT] 0o644
        Tau
        RV_num(3)
    89: write (FD 3) "ABCDE" 5
        Tau
        EBADF
    90: pread (FD 3) 100 0
        Tau
        RV_bytes("")
    91: close (FD 3)
        Tau
        RV_none
    92: unlink "f2.txt"
        Tau
        RV_none

        # if O_EXCL is given the file must not exist
    95: open "f1.txt" [O_EXCL;O_CREAT;O_RDWR] 0o644
        Tau
        EEXIST
    96: close (FD 3)
        Tau
        EBADF

    98: open "f2.txt" [O_EXCL;O_CREAT;O_RDWR] 0o644
        Tau
        RV_num(3)
    99: write (FD 3) "ABCDE" 5
        Tau
        RV_num(5)
   100: pread (FD 3) 100 0
        Tau
        RV_bytes("ABCDE")
   101: close (FD 3)
        Tau
        RV_none
   102: unlink "f2.txt"
        Tau
        RV_none

        # if O_EXCL but not O_CREATE is set, the result is undefined
        # open "f1.txt" [O_RDWR;O_EXCL] 0o777
        # close (FD 3)

        # to create a file, we need write access to the parent dir
        #chmod /d1 r-xr-xr-x
   110: open "/d1/f3.txt" [O_CREAT;O_WRONLY] 0o644
        Tau
        RV_num(3)
   111: close (FD 3)
        Tau
        RV_none

        #chmod /d1 rwxr-xr-x
   114: open "/d1/f3.txt" [O_CREAT;O_RDWR] 0o644
        Tau
        RV_num(3)
   115: write (FD 3) "ABCDE" 5
        Tau
        RV_num(5)
   116: pread (FD 3) 100 0
        Tau
        RV_bytes("ABCDE")
   117: close (FD 3)
        Tau
        RV_none
   118: unlink "/d1/f3.txt"
        Tau
        RV_none

        # the file-permissions of a newly created file don't matter
   121: open "/d1/f3.txt" [O_CREAT;O_RDWR] 0o444
        Tau
        RV_num(3)
   122: write (FD 3) "ABCDE" 5
        Tau
        RV_num(5)
   123: pread (FD 3) 100 0
        Tau
        RV_bytes("ABCDE")
   124: close (FD 3)
        Tau
        RV_none

   126: open "/d1/f3.txt" [O_RDWR]
        Tau
        RV_num(3)
   127: close (FD 3)
        Tau
        RV_none

   129: open "/d1/f3.txt" [O_RDONLY]
        Tau
        RV_num(3)
   130: read (FD 3) 100
        Tau
        RV_bytes("ABCDE")
   131: close (FD 3)
        Tau
        RV_none

        # open does not change the permissions on existing files
   134: open "/d1/f3.txt" [O_RDONLY;O_CREAT] 0o000
        Tau
        RV_num(3)
   135: pread (FD 3) 100 0
        Tau
        RV_bytes("ABCDE")
   136: close (FD 3)
        Tau
        RV_none

   138: open "/d1/f3.txt" [O_RDONLY]
        Tau
        RV_num(3)
   139: read (FD 3) 100
        Tau
        RV_bytes("ABCDE")
   140: close (FD 3)
        Tau
        RV_none
   141: unlink "/d1/f3.txt"
        Tau
        RV_none

        # not even read permission is needed on newly created files
   144: open "/d1/f3.txt" [O_RDONLY;O_CREAT] 0o000
        Tau
        RV_num(3)
   145: pread (FD 3) 100 0
        Tau
        RV_bytes("")
   146: close (FD 3)
        Tau
        RV_none

   148: open "/d1/f3.txt" [O_RDONLY]
        Tau
        RV_num(3)
   149: read (FD 3) 100
        Tau
        RV_bytes("")
   150: close (FD 3)
        Tau
        RV_none
   151: unlink "/d1/f3.txt"
        Tau
        RV_none


        # O_CREAT flag only creates files not the dirs in path
   155: open "/no-such-dir/file.txt" [O_RDONLY;O_CREAT] 0o644
        Tau
        ENOENT
   156: close (FD 3)
        Tau
        EBADF


        # creating a file without providing a mode is
        # unspecified in Posix. For Linux, the
        # default mode is 0o101
   162: open "f2.txt" [O_CREAT;O_WRONLY]
        Tau
        RV_num(3)
   163: close (FD 3)
        Tau
        RV_none
   164: stat "f2.txt"
        Tau
        RV_stat { st_dev=1792; st_ino=32644; st_kind=S_IFREG; st_perm=0o101; st_nlink=1; st_uid=0; st_gid=0; st_rdev=0; st_size=0; st_atim={tv_sec=1421153937;tv_nsec=696433544;}; st_mtim={tv_sec=1421153937;tv_nsec=696433544;}; st_ctim={tv_sec=1421153937;tv_nsec=696433544;}; }
   165: unlink "f2.txt"
        Tau
        RV_none

        ##############################################
        # O_TRUNC
        ##############################################

        # O_TRUNC works as expected
   172: unlink "f1.txt"
        Tau
        RV_none
   173: open "f1.txt" [O_CREAT;O_WRONLY] 0o644
        Tau
        RV_num(3)
   174: write! (FD 3) "0123456789" 10
        Tau
        RV_num(10)
   175: close (FD 3)
        Tau
        RV_none

   177: open "f1.txt" [O_RDWR]
        Tau
        RV_num(3)
   178: read! (FD 3) 100
        Tau
        RV_bytes("0123456789")
   179: close (FD 3)
        Tau
        RV_none

   181: open "f1.txt" [O_TRUNC;O_RDWR]
        Tau
        RV_num(3)
   182: read! (FD 3) 100
        Tau
        RV_bytes("")
   183: close (FD 3)
        Tau
        RV_none

        # behaviour of O_TRUNC without write flag is undefined
        # on linux architecture, the O_TRUNC just truncates 
        # even in read-only mode
   188: open "f1.txt" [O_TRUNC;O_RDWR]
        Tau
        RV_num(3)
   189: write! (FD 3) "0123456789" 10
        Tau
        RV_num(10)
   190: close (FD 3)
        Tau
        RV_none

   192: open "f1.txt" [O_RDONLY]
        Tau
        RV_num(3)
   193: read! (FD 3) 100
        Tau
        RV_bytes("0123456789")
   194: close (FD 3)
        Tau
        RV_none

   196: open "f1.txt" [O_RDONLY;O_TRUNC]
        Tau
        RV_num(3)
   197: read! (FD 3) 100
        Tau
        RV_bytes("")
   198: close (FD 3)
        Tau
        RV_none

        # but we can't truncate file we don't have write permission to
   201: open "f1.txt" [O_TRUNC;O_RDWR]
        Tau
        RV_num(3)
   202: write (FD 3) "0123456789" 10
        Tau
        RV_num(10)
   203: close (FD 3)
        Tau
        RV_none

   205: open "f1.txt" [O_RDONLY]
        Tau
        RV_num(3)
   206: read! (FD 3) 100
        Tau
        RV_bytes("0123456789")
   207: close (FD 3)
        Tau
        RV_none

   209: chmod "f1.txt" 0o444
        Tau
        RV_none
   210: open "f1.txt" [O_RDONLY;O_TRUNC]
        Tau
        RV_num(3)
   211: read! (FD 3) 100
        Tau
        RV_bytes("")
   212: close (FD 3)
        Tau
        RV_none

   214: open "f1.txt" [O_RDONLY]
        Tau
        RV_num(3)
   215: read! (FD 3) 100
        Tau
        RV_bytes("")
   216: close (FD 3)
        Tau
        RV_none

   218: chmod "f1.txt" 0o644
        Tau
        RV_none
   219: open "f1.txt" [O_RDONLY;O_TRUNC]
        Tau
        RV_num(3)
   220: read! (FD 3) 100
        Tau
        RV_bytes("")
   221: close (FD 3)
        Tau
        RV_none

   223: open "f1.txt" [O_RDONLY]
        Tau
        RV_num(3)
   224: read! (FD 3) 100
        Tau
        RV_bytes("")
   225: close (FD 3)
        Tau
        RV_none


        ##############################################
        # O_DIRECTORY
        ##############################################

        # using O_DIRECTORY with dirs is fine
        # but we can't do anything afterwards :-)
   234: open "d1" [O_RDONLY;O_DIRECTORY]
        Tau
        RV_num(3)
   235: read (FD 3) 100
        Tau
        EISDIR
   236: close (FD 3)
        Tau
        RV_none

        # using O_DIRECTORY with files fails
   239: open "f1.txt" [O_RDONLY;O_DIRECTORY]
        Tau
        RV_num(3)
   240: read (FD 3) 100
        Tau
        RV_bytes("")
   241: close (FD 3)
        Tau
        RV_none

        # using O_DIRECTORY on non-existing files
   244: open "no-such-file.txt" [O_RDONLY;O_DIRECTORY]
        Tau
        ENOENT
   245: read (FD 3) 100
        Tau
        EBADF
   246: close (FD 3)
        Tau
        EBADF

        # using O_DIRECTORY on non-existing dir
   249: open "/no-such-dir/" [O_RDONLY;O_DIRECTORY]
        Tau
        ENOENT
   250: read (FD 3) 100
        Tau
        EBADF
   251: close (FD 3)
        Tau
        EBADF

        # we can't create directories
   254: open "/no-such-dir/" [O_RDONLY;O_DIRECTORY;O_CREAT]
        Tau
        EISDIR
   255: read (FD 3) 100
        Tau
        EBADF
   256: close (FD 3)
        Tau
        EBADF

   258: open "/no-such-dir/" [O_RDONLY;O_CREAT]
        Tau
        EISDIR
   259: read (FD 3) 100
        Tau
        EBADF
   260: close (FD 3)
        Tau
        EBADF


        ##############################################
        # O_APPEND
        ##############################################

        # write fresh content
   268: open "f1.txt" [O_TRUNC;O_RDWR]
        Tau
        RV_num(3)
   269: write! (FD 3) "0123456789" 10
        Tau
        RV_num(10)
   270: pread! (FD 3) 100 0
        Tau
        RV_bytes("0123456789")
   271: close (FD 3)
        Tau
        RV_none

        # override at beginning
   274: open "f1.txt" [O_RDWR]
        Tau
        RV_num(3)
   275: write (FD 3) "ABCDE" 5
        Tau
        RV_num(5)
   276: pread! (FD 3) 100 0
        Tau
        RV_bytes("ABCDE56789")
   277: close (FD 3)
        Tau
        RV_none

        # override at end
   280: open "f1.txt" [O_APPEND;O_RDWR]
        Tau
        RV_num(3)
   281: write (FD 3) "ABCDE" 5
        Tau
        RV_num(5)
   282: pread! (FD 3) 100 0
        Tau
        RV_bytes("ABCDE56789ABCDE")
   283: close (FD 3)
        Tau
        RV_none

        # O_APPEND sets file-offset before every(!) write
   286: open "f1.txt" [O_APPEND;O_RDWR]
        Tau
        RV_num(3)
   287: write (FD 3) "XXX" 3
        Tau
        RV_num(3)
   288: lseek (FD 3) 0 SEEK_SET
        Tau
        RV_num(0)
   289: write (FD 3) "YYY" 3
        Tau
        RV_num(3)
   290: lseek (FD 3) 0 SEEK_SET
        Tau
        RV_num(0)
   291: write (FD 3) "ZZZ" 3
        Tau
        RV_num(3)
   292: read (FD 3) 100
        Tau
        RV_bytes("")
   293: lseek (FD 3) 0 SEEK_SET
        Tau
        RV_num(0)
   294: read (FD 3) 100
        Tau
        RV_bytes("ABCDE56789ABCDEXXXYYYZZZ")
   295: pread! (FD 3) 100 0
        Tau
        RV_bytes("ABCDE56789ABCDEXXXYYYZZZ")
   296: close (FD 3)
        Tau
        RV_none

        # O_APPEND also affects pwrite
   299: open "f1.txt" [O_APPEND;O_RDWR]
        Tau
        RV_num(3)
   300: pwrite (FD 3) "AAA" 3 0
        Tau
        RV_num(3)
   301: pwrite (FD 3) "BBB" 3 -1
        Tau
        EINVAL
   302: pwrite (FD 3) "CCC" 3 5
        Tau
        RV_num(3)
   303: pread! (FD 3) 100 0
        Tau
        RV_bytes("ABCDE56789ABCDEXXXYYYZZZAAACCC")
   304: close (FD 3)
        Tau
        RV_none

        # pwrite does not modify fd-offset, whereas write does
   307: open "f1.txt" [O_APPEND;O_RDWR]
        Tau
        RV_num(3)
   308: lseek (FD 3) 0 SEEK_CUR
        Tau
        RV_num(0)
   309: pwrite (FD 3) "DDD" 3 0
        Tau
        RV_num(3)
   310: lseek (FD 3) 0 SEEK_CUR
        Tau
        RV_num(0)
   311: write (FD 3) "EEE" 3
        Tau
        RV_num(3)
   312: lseek (FD 3) 0 SEEK_CUR
        Tau
        RV_num(36)
   313: pread! (FD 3) 100 0
        Tau
        RV_bytes("ABCDE56789ABCDEXXXYYYZZZAAACCCDDDEEE")
   314: close (FD 3)
        Tau
        RV_none


        # O_APPEND does only influence write and pwrite
   318: open "f1.txt" [O_APPEND;O_RDWR]
        Tau
        RV_num(3)
   319: read (FD 3) 100
        Tau
        RV_bytes("ABCDE56789ABCDEXXXYYYZZZAAACCCDDDEEE")
   320: close (FD 3)
        Tau
        RV_none

   322: open "f1.txt" [O_APPEND;O_RDWR]
        Tau
        RV_num(3)
   323: pread (FD 3) 100 0
        Tau
        RV_bytes("ABCDE56789ABCDEXXXYYYZZZAAACCCDDDEEE")
   324: close (FD 3)
        Tau
        RV_none

   326: open "f1.txt" [O_APPEND;O_RDWR]
        Tau
        RV_num(3)
   327: lseek (FD 3) 0 SEEK_CUR
        Tau
        RV_num(0)
   328: close (FD 3)
        Tau
        RV_none


        ##############################################
        # testing file permissions
        ##############################################

        # read-only needs read permission
   336: chmod "f1.txt" 0o400
        Tau
        RV_none
   337: open_close "f1.txt" [O_RDONLY]
        Tau
        RV_none

   339: chmod "f1.txt" 0o000
        Tau
        RV_none
   340: open_close "f1.txt" [O_RDONLY]
        Tau
        RV_none


        # write-only needs write permission
   344: chmod "f1.txt" 0o200
        Tau
        RV_none
   345: open_close "f1.txt" [O_WRONLY]
        Tau
        RV_none

   347: chmod "f1.txt" 0o000
        Tau
        RV_none
   348: open_close "f1.txt" [O_WRONLY]
        Tau
        RV_none

   350: chmod "f1.txt" 0o400
        Tau
        RV_none
   351: open_close "f1.txt" [O_WRONLY]
        Tau
        RV_none

        # read-write needs read and write permission
   354: chmod "f1.txt" 0o600
        Tau
        RV_none
   355: open_close "f1.txt" [O_RDWR]
        Tau
        RV_none

   357: chmod "f1.txt" 0o400
        Tau
        RV_none
   358: open_close "f1.txt" [O_RDWR]
        Tau
        RV_none

   360: chmod "f1.txt" 0o200
        Tau
        RV_none
   361: open_close "f1.txt" [O_RDWR]
        Tau
        RV_none

   363: chmod "f1.txt" 0o000
        Tau
        RV_none
   364: open_close "f1.txt" [O_RDWR]
        Tau
        RV_none


        # truncate requires write permission
   368: chmod "f1.txt" 0o600
        Tau
        RV_none
   369: open_close "f1.txt" [O_RDONLY;O_TRUNC]
        Tau
        RV_none

   371: chmod "f1.txt" 0o400
        Tau
        RV_none
   372: open_close "f1.txt" [O_RDONLY;O_TRUNC]
        Tau
        RV_none


        # append makes only sense with write, but 
        # does not require it
   377: chmod "f1.txt" 0o400
        Tau
        RV_none
   378: open "f1.txt" [O_RDONLY;O_APPEND]
        Tau
        RV_num(3)
   379: write (FD 3) "0123456789" 10
        Tau
        EBADF
   380: close (FD 3)
        Tau
        RV_none


        ##############################################
        # testing dir permissions
        ##############################################

        # creating a file needs search and write permission
        # to the parent directory
   389: chmod "d1" 0o000
        Tau
        RV_none
   390: open_close "d1/f2.txt" [O_CREAT;O_WRONLY] 0o644
        Tau
        RV_none

   392: chmod "d1" 0o200
        Tau
        RV_none
   393: open_close "d1/f2.txt" [O_CREAT;O_WRONLY] 0o644
        Tau
        RV_none

   395: chmod "d1" 0o100
        Tau
        RV_none
   396: open_close "d1/f2.txt" [O_CREAT;O_WRONLY] 0o644
        Tau
        RV_none

   398: chmod "d1" 0o300
        Tau
        RV_none
   399: open_close "d1/f2.txt" [O_CREAT;O_WRONLY] 0o644
        Tau
        RV_none


        # to read a file, we needs search permission for the
        # parent directory (as well as to the file itself)

   405: chmod "d1" 0o000
        Tau
        RV_none
   406: open_close "d1/f2.txt" [O_RDONLY]
        Tau
        RV_none

   408: chmod "d1" 0o100
        Tau
        RV_none
   409: open_close "d1/f2.txt" [O_RDONLY]
        Tau
        RV_none


        # search permission to the parent is enough to modify a file
   413: chmod "d1" 0o000
        Tau
        RV_none
   414: open_close "d1/f2.txt" [O_WRONLY]
        Tau
        RV_none

   416: chmod "d1" 0o100
        Tau
        RV_none
   417: open_close "d1/f2.txt" [O_WRONLY]
        Tau
        RV_none

        # clean-up for dump etc.
   420: chmod "d1" 0o700
        Tau
        RV_none


